// 5 January 2017, Grace
//If object enters within range of 0-5cm of sonor sensor,
//servo motor rotates 180 degrees and back again. 

//HEADER
#include <Servo.h>

//PIN DECLARATIONS
int Servopin = 9;

//LED indicator will indicate that pulse has been received and the motor is turning.
int LEDindicator = 8; 

const int pingPin = 7;


Servo servo;
int angle = 0;

void setup() {
  
 servo.attach (Servopin);
 pinMode(LEDindicator, OUTPUT);
 Serial.begin(9600);
 
}

void loop() {
  long duration, inches, cm;
  // The PING))) is triggered by a HIGH pulse of 2 or more microseconds.
  // Give a short LOW pulse beforehand to ensure a clean HIGH pulse:
     pinMode(pingPin, OUTPUT);
     digitalWrite(pingPin, LOW);
     delayMicroseconds(2);
     digitalWrite(pingPin, HIGH);
     delayMicroseconds(5);
     digitalWrite(pingPin, LOW);

  // The same pin is used to read the signal from the PING))): a HIGH
  // pulse whose duration is the time (in microseconds) from the sending
  // of the ping to the reception of its echo off of an object.
     pinMode(pingPin, INPUT);
     duration = pulseIn(pingPin, HIGH);

  // convert the time into a distance
     inches = microsecondsToInches(duration);
     cm = microsecondsToCentimeters(duration);

  Serial.print(inches);
  Serial.print("in, ");
  Serial.print(cm);
  Serial.print("cm");
  Serial.println();

 
  
// If Sonar Sensor returns value within 0 to 5 cm, if statement executes.
  if (cm >= 5 && cm <= 0){
      digitalWrite (LEDindicator, HIGH);
      
      for (angle = 0; angle < 180; angle ++){
         servo.write (angle);
         delay (10);
        }
      for (angle = 180; angle > 0;angle--){
         servo.write (angle);
         delay (20);
        }
 
}
    
    delay(1000);
    digitalWrite (LEDindicator, LOW);
}


long microsecondsToInches(long microseconds) {
  // According to Parallax's datasheet for the PING))), there are
  // 73.746 microseconds per inch (i.e. sound travels at 1130 feet per
  // second).  This gives the distance travelled by the ping, outbound
  // and return, so we divide by 2 to get the distance of the obstacle.
  return microseconds / 74 / 2;
}

long microsecondsToCentimeters(long microseconds) {
  // The speed of sound is 340 m/s or 29 microseconds per centimeter.
  // The ping travels out and back, so to find the distance of the
  // object we take half of the distance travelled.
  return microseconds / 29 / 2;
}
